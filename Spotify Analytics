-- For this project, I downloaded Spotify data from Kaggle, created a table to insert Spotify data into, and performed analytics on the data using SQL. 

--Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

-- I inserted the Spotify Data .csv into the table.

--Next, I explored the data using the following SQL. 

--What is the average danceability by artist and track?
SELECT artist_name, AVG(danceability)
FROM BIT_DB.Spotifydata
GROUP by artist_name
ORDER BY AVG(danceability) DESC

--Who are the top 10 artists based on popularity?
SELECT artist_name
FROM BIT_DB.Spotifydata
ORDER BY popularity DESC
LIMIT 10

--What artist released the longest song and what was the name of the song? 
SELECT artist_name,track_name
FROM BIT_DB.Spotifydata
WHERE duration_ms = (SELECT MAX(duration_ms) FROM BIT_DB.Spotifydata)

--What's the average danceability of songs that have a popularity score 90 and above?
SELECT AVG(danceability)
FROM BIT_DB.Spotifydata
WHERE popularity >= 90

--What's the average danceability of top 10 songs?
SELECT AVG(danceability)
FROM BIT_DB.Spotifydata
WHERE track_name IN (SELECT track_name FROM BIT_DB.Spotifydata ORDER BY popularity DESC LIMIT 10)

--How many of the top 50 songs are in each key?
SELECT song_key,COUNT(track_id)
FROM BIT_DB.Spotifydata
GROUP BY song_key

--How many of the top 10 songs are in a major scale?
SELECT COUNT(*)
FROM BIT_DB.Spotifydata
WHERE track_name IN (SELECT track_name FROM BIT_DB.Spotifydata ORDER BY popularity DESC LIMIT 10)
AND song_mode = 1

--How many of the top 50 songs are longer than 4 min?
SELECT COUNT(*)
FROM BIT_DB.Spotifydata
WHERE duration_ms>240000

--Create a Common Table Expression to calculate the average popularity for the artists in the Spotify data table. Then, for every artist with an average popularity of 90 or above, show their name and their average popularity.
WITH CTE AS(
SELECT artist_name, AVG(popularity) AS avg_popularity
FROM Spotifydata
GROUP BY artist_name)

SELECT artist_name, avg_popularity
FROM CTE
WHERE avg_popularity >=90

--Identify the bike lanes that have an average safety rating of 4.0 or higher, and show that average safety rating for each of those bike lanes and label them as 'Safe Lane'
WITH safe AS (
SELECT street, AVG(safetyrating) as avg_safetyrating
FROM CityBikeLanes
GROUP BY street
)

SELECT street, avg_safetyrating, 'Safe Lane' as label
FROM safe
WHERE avg_safetyrating >=4.0
ORDER BY avg_safetyrating DESC
